---
- name: Palo initial config
  hosts: palo
  connection: local
  ignore_errors: true
  roles:
    - dsu.ccdc.palo
  vars:
    provider:
      ip_address: "{{ inventory_hostname }}"
      api_key: "{{ api_key }}"

  tasks:
    - name: Include role
      ansible.builtin.include_role:
        name: dsu.ccdc.palo
        vars_from: main.yml
    # - name: Show Facts
    #   ansible.builtin.debug:
    #     var: "{{update_os}}, {{logging}}"

    - name: Load vars
      ansible.builtin.include_vars:
        dir: vars/

    # - name: Pause until for commit verification
    #   ansible.builtin.pause:
    - name: Print configs
      ansible.builtin.debug:
        msg:
          Update OS: "{{ palo_update_os }}"
          Update Other: "{{ palo_update_other }}"
          Initial Interface: "{{ palo_config_initial_interface }}"
          Initial Groups: "{{ palo_config_initial_groups }}"
          Logging: "{{ palo_config_logging }}"
          Initial Rules: "{{ palo_config_initial_rules }}"
          PANOS Version: "{{ palo_panos_version }}"
          # IP Range: "{{ ip_range }}"
          # Network: "{{ ip_range_mask }}"
          Wazuh: "{{ wazuh }}"
          Wazuh Port: "{{ wazuh_port }}"
    - name: Confirm config
      ansible.builtin.pause:
    - name: Palo OS Update
      ansible.builtin.import_role:
        name: dsu.ccdc.palo
        tasks_from: os_update
        vars_from: main
      when: palo_update_os

    - name: Update all other software to latest version
      ansible.builtin.import_role:
        name: dsu.ccdc.palo
        tasks_from: all_updates
      when: palo_update_other

    - name: Pause for update verification
      ansible.builtin.pause:
      when: palo_update_os or palo_update_other

    - name: Set os_update as done
      ansible.builtin.set_fact:
        palo_update_os: false
        palo_update_other: false
        cacheable: true
      when: palo_update_os

    # Zones
    - name: Add Zones
      ansible.builtin.import_role:
        name: dsu.ccdc.palo
        tasks_from: zones
      when: palo_config_zones

    # Interfaces
    - name: Add interfaces
      ansible.builtin.import_role:
        name: dsu.ccdc.palo
        tasks_from: initial_interfaces
      when: palo_config_initial_interface

    # Commit changes
    - name: Commit interface changes
      ansible.builtin.import_role:
        name: dsu.ccdc.palo
        tasks_from: commit
      when: palo_config_initial_interface

    - name: Set interfaces and zones complete
      ansible.builtin.set_fact:
        palo_config_initial_interface: false
        palo_config_zones: false
        cacheable: true
      when: palo_config_initial_interface

    # Objects
    - name: Add addresses
      ansible.builtin.import_role:
        name: dsu.ccdc.palo
        tasks_from: address
      when: palo_config_initial_groups

    - name: Add profiles
      ansible.builtin.import_role:
        name: dsu.ccdc.palo
        tasks_from: profiles
      when: palo_config_initial_groups

    - name: Add services
      ansible.builtin.import_role:
        name: dsu.ccdc.palo
        tasks_from: service_group
      when: palo_config_initial_groups

    - name: Commit object changes
      ansible.builtin.import_role:
        name: dsu.ccdc.palo
        tasks_from: commit
      when: palo_config_initial_groups

    - name: Set initial names completed
      ansible.builtin.set_fact:
        palo_config_initial_groups: false
        cacheable: true
      when: palo_config_initial_groups

    # Logging
    - name: Add logging
      ansible.builtin.import_role:
        name: dsu.ccdc.palo
        tasks_from: initial_logging
      when: palo_config_logging

    - name: Commit logging changes
      ansible.builtin.import_role:
        name: dsu.ccdc.palo
        tasks_from: commit
      when: palo_config_logging

    - name: Set logging complete
      ansible.builtin.set_fact:
        palo_config_logging: false
        cacheable: true
      when: palo_config_logging

    # Firewall rules
    # - name: Add CCDC firewall Rules
    #   ansible.builtin.import_role:
    #     name: dsu.ccdc.palo
    #     tasks_from: palo_rules
    #   when: palo_config_initial_rules
    - name: Add tags
      ansible.builtin.import_role:
        name: dsu.ccdc.palo
        tasks_from: tags
      when: palo_config_initial_rules

    - name: Add firewall rules
      ansible.builtin.import_role:
        name: dsu.ccdc.palo
        tasks_from: palo_rules

    - name: Commit rule changes
      ansible.builtin.import_role:
        name: dsu.ccdc.palo
        tasks_from: commit

  handlers:
    - name: Wait for System Information
      paloaltonetworks.panos.panos_op:
        provider: "{{ provider }}"
        cmd: show system info
      register: system_info
      until: system_info is not failed
      retries: 100
      delay: 10
      listen: reboot

    - name: Update System Info
      ansible.builtin.set_fact:
        system_info_json: "{{ system_info.stdout | from_json }}"
      listen: reboot

    - name: Update Software Version
      ansible.builtin.set_fact:
        sw_version: "{{ system_info_json.response.result.system['sw-version'] }}"
      listen: reboot

    - name: Display Current Software version
      ansible.builtin.debug:
        msg: "Current software version is: {{ sw_version }}"
      listen: reboot
