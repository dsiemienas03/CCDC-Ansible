---
name: Antsibull

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  push:
    branches: ["main"]

env:
  NAMESPACE: dsu
  COLLECTION_NAME: ccdc
  ANSIBLE_COLLECTIONS_PATHS: ./dsu/ccdc
jobs:
  # update_docs:
  #   runs-on: ubuntu-latest
  #   name: create documentation inside docs-folder
  #   steps:
  #     - uses: actions/checkout@v4.1.1
  #       with:
  #         fetch-depth: 0

  #     # ansible-doc-extractor requires the collection to be in a directory in
  #     # the form ./ansible_collections/${{env.NAMESPACE}}/${{env.COLLECTION_NAME}}/

  #     - name: Check out code to ansible collection location
  #       uses: actions/checkout@v4.1.1
  #       with:
  #         path: ansible_collections/${{env.NAMESPACE}}/${{env.COLLECTION_NAME}}
  #         fetch-depth: 0

  #     - name: Set up Python
  #       uses: actions/setup-python@v5 # v5
  #       with:
  #         python-version: 3.12

      # - name: Install ansible-doc-extractor
      #   run: python -m pip install ansible-doc-extractor[ansible]

      # - name: create documentation
      #   run: ansible-doc-extractor docs/  # plugins/inventory/* plugins/modules/*

      # - name: commit documentation
      #   uses: github-actions-x/commit@722d56b8968bf00ced78407bbe2ead81062d8baa # v2.9
      #   with:
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     push-branch: "main"
      #     commit-message: "update documentation"
      #     force-add: "true"
      #     files: docs/
      #     name: N/A
      #     email: N/A

  generate_changelog:
    runs-on: ubuntu-latest
    name: create release draft
    # needs: update_docs # the documentation should be updated before creating a new release
    permissions:
      contents: write
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write
    steps:
      - uses: "actions/checkout@v4.1.1" # v4.1.1
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5 # v5
        with:
          python-version: 3.12

      - name: Install antsibull-changelog, antsichaut
        run: python -m pip install antsibull-changelog antsichaut --disable-pip-version-check

      - name: Install pandoc
        run: sudo apt-get install pandoc

      - name: "Get Previous tag"
        id: previoustag
        uses: "WyriHaximus/github-action-get-previous-tag@v1.3.0" # v1.3.0
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      - name: Set variables
        run: |
          VER=$(cat VERSION)
          echo "VERSION=$VER" >> $GITHUB_ENV

      - name: Generate new version in changelog.yaml
        run: antsibull-changelog release -v --version "${{ env.VERSION }}"
        working-directory: ./dsu/ccdc

      - name: Generate changelog.yaml
        run: antsichaut
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SINCE_VERSION: "${{ steps.previoustag.outputs.tag }}"

      - name: Update Changelog.rst
        run: antsibull-changelog generate -v
        working-directory: ./dsu/ccdc

      # the token is needed so the github app can push to the repository
      # the github app can bypass the branch protection rule (need a PR to merge)
      # this way it can directly commit to main
      # - name: Obtain a GitHub App Installation Access Token
      #   id: githubAppAuth
      #   run: |
      #     TOKEN="$(npx obtain-github-app-installation-access-token ci ${{ secrets.GH_BRANCH_PROTECTION_APP_TOKEN }})"
      #     echo "::add-mask::$TOKEN"
      #     echo token=${TOKEN} >> $GITHUB_OUTPUT

      - name: update and push due to new release
        uses: github-actions-x/commit@v2.9 # v2.9
        with:
          # use the token obtained in the step before
          github-token: ${{ secrets.GITHUB_TOKEN }}
          push-branch: "main"
          commit-message: "update due to new release"
          force-add: "true"
          force-push: "true"
          files: .
          name: N/A
          email: N/A




      # do a second checkout to prevent race situation
      # changelog gets updated but action works on old commit id
      - uses: actions/checkout@v4.1.1 # v4.1.1
        with:
          ref: main

      # Drafts your next Release notes as Pull Requests are merged into "main"
      - uses: release-drafter/release-drafter@v6 # v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
