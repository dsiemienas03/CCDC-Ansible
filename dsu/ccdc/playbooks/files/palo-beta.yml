- name: Palo configuration
  hosts: firewall
  connection: local
  ignore_errors: true
  vars:
    provider:
      ip_address: "{{ ip_address }}"
      api_key: "{{ api_key }}"
  # collections:
  #   - dsu.ccdc
  roles:
    - palo

  tasks:
    - name: Include User Variables
      ansible.builtin.include_vars: vars/config.yml
    - name: Include IP vars
      ansible.builtin.include_vars: vars/ips.yml

    # - name: Show Facts
    #   ansible.builtin.debug:
    #     var: "{{update_os}}, {{logging}}"

    # - name: Pause until for commit verification
    #   ansible.builtin.pause:
    - name: Print configs
      ansible.builtin.debug:
        msg:
          Update OS: "{{ update_os }}"
          Update Other: "{{ update_other }}"
          Initial Interface: "{{ config_initial_interface }}"
          Initial Groups: "{{ config_initial_groups }}"
          Logging: "{{ config_logging }}"
          Initial Rules: "{{ config_initial_rules }}"
          PANOS Version: "{{ panos_version }}"
          # IP Range: "{{ ip_range }}"
          # Network: "{{ ip_range_mask }}"
          Wazuh: "{{ wazuh }}"
          Wazuh Port: "{{ wazuh_port }}"

    # Import beta tasks here
    - name: Set palo ip_address
      ansible.builtin.set_fact:
        palo_ip: "{{ ip_address }}"

    - name: Configure SSH decryption
      ansible.builtin.include_roles:
        name: palo
        tasks_from: ssh-decrypt
      when: config_initial_groups

    # Commit changes
    - name: Commit interface changes
      ansible.builtin.include_tasks:
        tasks_from: commit.yml
      when: config_initial_interface == "y"

  handlers:
    - name: Wait for System Information
      paloaltonetworks.panos.panos_op:
        provider: "{{ provider }}"
        cmd: show system info
      register: system_info
      until: system_info is not failed
      retries: 100
      delay: 10
      listen: reboot

    - name: Update System Info
      ansible.builtin.set_fact:
        system_info_json: "{{ system_info.stdout | from_json }}"
      listen: reboot

    - name: Update Software Version
      ansible.builtin.set_fact:
        sw_version: "{{ system_info_json.response.result.system['sw-version'] }}"
      listen: reboot

    - name: Display Current Software version
      ansible.builtin.debug:
        msg: "Current software version is: {{ sw_version }}"
      listen: reboot
